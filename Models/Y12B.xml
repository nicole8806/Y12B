<?xml version="1.0"?>
<!--== Models/Y12B.xml  ==-->

<PropertyList>

	<model>
		<name>Y12B</name>
		<offsets> 
			<z-m>1.30</z-m>
		</offsets>
		<path>Aircraft/Y12B/Models/Y12B.ac</path>
		
	</model>

    <sound>
        <path>Aircraft/Y12B/Sounds/Y12B-mp-sound.xml</path>
    </sound>

<nasal>
  <load>
   ##############################################################################
   # The on-load Nasal is not executed when this file is loaded as the user
   # aircraft.
   ##############################################################################
   var rplayer = cmdarg();
   # Set up property aliases for animations.
   
   # print("############ commander(instructor) loading...##############");
    
   #right hand pose  
   #rplayer.getNode("sim/model/npc[1]/limb[5]/hand-pose", 1).alias(rplayer.getNode("surface-positions/speedbrake-pos-norm"));
   
   #left hand pose 
   #rplayer.getNode("sim/model/npc[1]/limb[8]/hand-pose", 1).alias(rplayer.getNode("surface-positions/flap-pos-norm"));
      
   #hip, body
   #rplayer.getNode("sim/model/npc[1]/limb[0]/y-deg", 1).alias(rplayer.getNode("sim/multiplay/generic/float[0]"));
   #rplayer.getNode("sim/model/npc[1]/limb[0]/z-deg", 1).alias(rplayer.getNode("sim/multiplay/generic/float[1]"));   
 
   #chest
   #rplayer.getNode("sim/model/npc[1]/limb[1]/y-deg", 1).alias(rplayer.getNode("sim/multiplay/generic/float[2]"));
   #rplayer.getNode("sim/model/npc[1]/limb[1]/z-deg", 1).alias(rplayer.getNode("sim/multiplay/generic/float[3]"));
   
   #rplayer.getNode("sim/model/npc[1]/limb[2]/y-deg", 1).alias(rplayer.getNode("sim/multiplay/generic/float[4]"));
   #rplayer.getNode("sim/model/npc[1]/limb[2]/z-deg", 1).alias(rplayer.getNode("sim/multiplay/generic/float[5]"));
   
   #right arm
   #rplayer.getNode("sim/model/npc[1]/limb[3]/x-deg", 1).alias(rplayer.getNode("sim/multiplay/generic/float[7]"));
   #rplayer.getNode("sim/model/npc[1]/limb[3]/y-deg", 1).alias(rplayer.getNode("sim/multiplay/generic/float[8]"));
   #rplayer.getNode("sim/model/npc[1]/limb[3]/z-deg", 1).alias(rplayer.getNode("sim/multiplay/generic/float[9]"));
   #right arm2  
   #rplayer.getNode("sim/model/npc[1]/limb[4]/z-deg", 1).alias(rplayer.getNode("sim/multiplay/generic/float[10]"));  
       
   #right hand
   #rplayer.getNode("sim/model/npc[1]/limb[5]/x-deg", 1).alias(rplayer.getNode("sim/multiplay/generic/float[11]"));
   #rplayer.getNode("sim/model/npc[1]/limb[5]/y-deg", 1).alias(rplayer.getNode("sim/multiplay/generic/float[12]"));
  
   #left arm
   #rplayer.getNode("sim/model/npc[1]/limb[6]/x-deg", 1).alias(rplayer.getNode("sim/multiplay/generic/float[13]"));
   #rplayer.getNode("sim/model/npc[1]/limb[6]/y-deg", 1).alias(rplayer.getNode("sim/multiplay/generic/float[14]"));
   #rplayer.getNode("sim/model/npc[1]/limb[6]/z-deg", 1).alias(rplayer.getNode("sim/multiplay/generic/float[15]"));
   #left arm2
   rplayer.getNode("sim/model/npc[1]/limb[7]/z-deg", 1).alias(rplayer.getNode("sim/multiplay/generic/float[16]"));
   #left hand
   #rplayer.getNode("sim/model/npc[1]/limb[8]/x-deg", 1).alias(rplayer.getNode("sim/multiplay/generic/float[17]"));
   #rplayer.getNode("sim/model/npc[1]/limb[8]/y-deg", 1).alias(rplayer.getNode("sim/multiplay/generic/float[18]"));
 
   #right leg1
   #rplayer.getNode("sim/model/npc[1]/limb[9]/x-deg", 1).alias(rplayer.getNode("sim/multiplay/generic/float[19]"));
 

   #rplayer.getNode("sim/model/npc[1]/limb[9]/y-deg", 1).alias(rplayer.getNode("surface-positions/wing-pos-norm"));
   #rplayer.getNode("sim/model/npc[1]/limb[9]/z-deg", 1).alias(rplayer.getNode("surface-positions/wing-fold-pos-norm"));    
   #right leg2
   #rplayer.getNode("sim/model/npc[1]/limb[10]/y-deg", 1).alias(rplayer.getNode("gear/gear[1]/compression-norm"));   
    
   #right foot
   #rplayer.getNode("sim/model/npc[1]/limb[11]/y-deg", 1).alias(rplayer.getNode("gear/gear[1]/position-norm"));   
     
    
   #left leg1
   #rplayer.getNode("sim/model/npc[1]/limb[12]/x-deg", 1).alias(rplayer.getNode("gear/gear[2]/compression-norm"));
   #rplayer.getNode("sim/model/npc[1]/limb[12]/y-deg", 1).alias(rplayer.getNode("gear/gear[2]/position-norm"));
   #rplayer.getNode("sim/model/npc[1]/limb[12]/z-deg", 1).alias(rplayer.getNode("gear/gear[3]/compression-norm"));   
    
   #left leg2
   #rplayer.getNode("sim/model/npc[1]/limb[13]/y-deg", 1).alias(rplayer.getNode("gear/gear[3]/position-norm"));
    
   #left foot
   #rplayer.getNode("sim/model/npc[1]/limb[14]/y-deg", 1).alias(rplayer.getNode("gear/gear[4]/compression-norm")); 
     
   #whole body up/down    
   #rplayer.getNode("sim/model/npc[1]/limb/z-m", 1).alias(rplayer.getNode("gear/gear[4]/position-norm"));   
 
   #not needed
   #rplayer.getNode("sim/walker/parachute-opened-sec", 1).alias(rplayer.getNode("gear/launchbar/position-norm"));   
   #rplayer.getNode("sim/walker/parachute-opened-altitude-ft", 1).alias(rplayer.getNode("gear/launchbar/holdback-position-norm"));   
 
   #rplayer.getNode("sim/walker/character", 1).alias(rplayer.getNode("sim/multiplay/generic/int[0]"));
   #rplayer.getNode("sim/walker/outfit", 1).alias(rplayer.getNode(  "sim/multiplay/generic/int[1]"));
   #rplayer.getNode("sim/walker/gender", 1).alias(rplayer.getNode(  "sim/multiplay/generic/int[2]"));
 
 #  rplayer.getNode("sim/walker/outside", 1).alias(rplayer.getNode("sim/multiplay/generic/int[3]"));
 
   ##############################################################################
   
   rplayer.getNode("controls/lighting/signal-light", 1).alias(rplayer.getNode("sim/multiplay/generic/int[4]"));
   rplayer.getNode("controls/doors/door0/position-norm", 1).alias(rplayer.getNode("surface-positions/elevator-pos-norm"));
   rplayer.getNode("controls/doors/door2/position-norm", 1).alias(rplayer.getNode("gear/launchbar/position-norm"));
   rplayer.getNode("controls/engines/engine/throttle", 1).alias(rplayer.getNode("surface-positions/left-aileron-pos-norm"));
  
  </load>
</nasal>


<!-- I can not see any effect?!  -->
<effect>
    <inherits-from>Aircraft/Generic/Effects/Fuselagereflect</inherits-from>
    <object-name>fuselage</object-name>
    <object-name>wings</object-name>
</effect>

<!-- pilot  -->
<model>
	<name>npc3</name>
      <path>Aircraft/Y12B/Human/Models/npc3.xml</path>  
		<nopreview/>
      <offsets> 
        <x-m>-7.0384</x-m>
        <y-m>-0.4858</y-m>
        <z-m>1.5</z-m>
      </offsets>
</model>

<!--== person sitting next to pilot ==-->	
<model>
		<name>npc0</name>
      <path>Aircraft/Y12B/Human/Models/npc0.xml</path>
		<nopreview/>
      <offsets> 
        <x-m>-7.0384</x-m>
        <y-m>0.45</y-m>
        <z-m>1.5</z-m>
      </offsets>
</model>



 <!-- == left (door) row ==-->	
<!-- == person sitting in seat 5r == -->	
<model>
		<name>p5r</name>
		 <path>Aircraft/Y12B/Human/Models/soldierVR-with-head.xml</path>
		<nopreview/>
		<offsets> 
			<heading-deg>-90</heading-deg>
			<x-m>-3.2</x-m>
			<y-m>-0.723</y-m>
			<z-m>1.2</z-m>
		</offsets>
</model> 
 
<!--== person sitting in seat 4R ==-->	
<model>
		<name>p4r</name>
		 <path>Aircraft/Y12B/Human/Models/soldierVR-with-head.xml</path>
		<nopreview/>
		<offsets> 
			<heading-deg>-90</heading-deg>
			<x-m>-3.72</x-m>
			<y-m>-0.693</y-m>
			<z-m>1.2</z-m>
		</offsets>
</model> 
 <!--== person sitting in seat 3R ==-->	
<model>
		<name>p3r</name>
		 <path>Aircraft/Y12B/Human/Models/soldierVR-with-head.xml</path>
		<nopreview/>
		<offsets> 
			<heading-deg>-90</heading-deg>
			<x-m>-4.16</x-m>
			<y-m>-0.72</y-m>
			<z-m>1.2</z-m>
		</offsets>
</model> 

<!--== person sitting in seat 2R ==-->	
<model>
		<name>p2r</name>
		 <path>Aircraft/Y12B/Human/Models/soldierVR-with-head.xml</path>
		<nopreview/>
		<offsets> 
			<heading-deg>-90</heading-deg>
			<x-m>-4.62</x-m>
			<y-m>-0.72</y-m>
			<z-m>1.2</z-m>
		</offsets>
</model>

<!--== person sitting in seat 1R ==-->	
<model>
		<name>p1r</name>
		 <path>Aircraft/Y12B/Human/Models/soldierVR-with-head.xml</path>
		<nopreview/>
		<offsets> 
			<heading-deg>-90</heading-deg>
			<x-m>-5.08</x-m>
			<y-m>-0.72</y-m>
			<z-m>1.2</z-m>
		</offsets>
</model>



 <!--== right row ==-->	
 
<!--== person sitting in seat 7L ==-->	
<model>
		<name>p7l</name>
		 <path>Aircraft/Y12B/Human/Models/soldierVR-with-head.xml</path>
		<nopreview/>
		<offsets> 
			<heading-deg>90</heading-deg>
			<x-m>-2.41</x-m>
			<y-m>0.693</y-m>
			<z-m>1.2</z-m>
		</offsets>
</model> 
<animation>
		<type>select</type>
		<object-name>p7l</object-name>
		<condition>
			<and>
			<equals>
				<!-- if the Y12B aircraft is the first player that connects to the server, then multiplayer[1] is the first 
				parachutist. generic/int[3] =  /sim/walker/outside
				 -->
				 <property>/ai/models/multiplayer[1]/sim/multiplay/generic/int[3]</property>
				 <value>0</value>
			</equals>
			 <greater-than-equals>
				  <property>/ai/models/multiplayer[1]/id</property>
				 <value>0</value>
			 </greater-than-equals>
			</and>
        </condition>        
</animation>
<!--== person sitting in seat 9L ==-->	
<model>
		<name>p9l</name>
		 <path>Aircraft/Y12B/Human/Models/soldierVR-with-head.xml</path>
		<nopreview/>
		<offsets> 
			<heading-deg>90</heading-deg>
			<x-m>-1.50</x-m>
			<y-m>0.693</y-m>
			<z-m>1.2</z-m>
		</offsets>
</model>  
 <animation>
		<type>select</type>
		<object-name>p9l</object-name>
		<condition>
			<and>
			<equals>
				<!-- if the Y12B aircraft is the first player that connects to the server, then multiplayer[1] is the first 
				parachutist. generic/int[3] =  /sim/walker/outside
				 -->
				 <property>/ai/models/multiplayer[2]/sim/multiplay/generic/int[3]</property>
				 <value>0</value>
			</equals>
			 <greater-than-equals>
				  <property>/ai/models/multiplayer[2]/id</property>
				 <value>0</value>
			 </greater-than-equals>
			</and>
        </condition>  
		
		
</animation>
 
 
 <!--== person sitting in seat 5L ==-->	
<model>
		<name>p5l</name>
		 <path>Aircraft/Y12B/Human/Models/soldierVR-with-head.xml</path>
		<nopreview/>
		<offsets> 
			<heading-deg>90</heading-deg>
			<x-m>-3.34</x-m>
			<y-m>0.693</y-m>
			<z-m>1.2</z-m>
		</offsets>
</model> 
 <animation>
		<type>select</type>
		<object-name>p5l</object-name>
		<condition>
			<and>
			<equals>
				<!-- if the Y12B aircraft is the first player that connects to the server, then multiplayer[1] is the first 
				parachutist. generic/int[3] =  /sim/walker/outside
				 -->
				 <property>/ai/models/multiplayer[3]/sim/multiplay/generic/int[3]</property>
				 <value>0</value>
			</equals>
			 <greater-than-equals>
				  <property>/ai/models/multiplayer[3]/id</property>
				 <value>0</value>
			 </greater-than-equals>
			</and>
        </condition>  
		    
</animation>
 
 <!--== person sitting in seat 4L ==-->	
<model>
		<name>p4l</name>
		 <path>Aircraft/Y12B/Human/Models/soldierVR-with-head.xml</path>
		<nopreview/>
		<offsets> 
			<heading-deg>90</heading-deg>
			<x-m>-3.78</x-m>
			<y-m>0.693</y-m>
			<z-m>1.2</z-m>
		</offsets>
</model> 
 <animation>
		<type>select</type>
		<object-name>p4l</object-name>
		<condition>
			<and>
			<equals>
				<!-- if the Y12B aircraft is the first player that connects to the server, then multiplayer[1] is the first 
				parachutist. generic/int[3] =  /sim/walker/outside
				 -->
				 <property>/ai/models/multiplayer[4]/sim/multiplay/generic/int[3]</property>
				 <value>0</value>
			</equals>
			 <greater-than-equals>
				  <property>/ai/models/multiplayer[4]/id</property>
				 <value>0</value>
			 </greater-than-equals>
			</and>
        </condition>  
		
		  
</animation>
 

 <!--== person sitting in seat 3L ==-->	
<model>
		<name>p3l</name>
		 <path>Aircraft/Y12B/Human/Models/soldierVR-with-head.xml</path>
		<nopreview/>
		<offsets> 
			<heading-deg>90</heading-deg>
			<x-m>-4.23</x-m>
			<y-m>0.693</y-m>
			<z-m>1.2</z-m>
		</offsets>
</model> 
 <animation>
		<type>select</type>
		<object-name>p3l</object-name>
		<condition>
			<and>
			<equals>
				<!-- if the Y12B aircraft is the first player that connects to the server, then multiplayer[1] is the first 
				parachutist. generic/int[3] =  /sim/walker/outside
				 -->
				 <property>/ai/models/multiplayer/sim/multiplay/generic/int[3]</property>
				 <value>0</value>
			</equals>
			 <greater-than-equals>
				  <property>/ai/models/multiplayer/id</property>
				 <value>0</value>
			 </greater-than-equals>
			</and>
        </condition>  
		
		    
</animation>
 


<!-- == jump commander in cabin == 
<model>
		<name>npc1</name>
		 <path>Aircraft/Y12B/Human/Models/npc1.xml</path>
		<nopreview/>
		<offsets> 
			<heading-deg>0</heading-deg>
			<x-m>-0.7</x-m>
			<y-m>0.0</y-m>
			
			<z-m>1.25</z-m>
		</offsets>
</model>
-->

<!--== propellers ==-->	
	<animation>
		<type>spin</type>
		<object-name>left_prop</object-name>
		<property>controls/engines/engine/throttle</property>
		<offset>10</offset>
		<factor>500</factor>
		<center>
			<x-m>0</x-m>
			<y-m>-2.74953</y-m>
			<z-m>1.78685</z-m>
		</center>
		<axis>
			<x>-1</x>
			<y>0</y>
			<z>0</z>
		</axis>
	</animation>

	<animation>
		<type>spin</type>
		<object-name>right_prop</object-name>
		<property>controls/engines/engine/throttle</property>
		<factor>500</factor>
		<center>
			<x-m>0</x-m>
			<y-m>2.66148</y-m>
			<z-m>1.78729</z-m>
		</center>
		<axis>
			<x>1</x>
			<y>0</y>
			<z>0</z>
		</axis>
	</animation>
	
<!--== landing gear ==-->	
<animation>
		<type>select</type>
		<object-name>wheels</object-name>
		<object-name>landing_gear</object-name>
		<condition>
				 <property>controls/gear/gear-down</property>
        </condition>        
</animation>

<!--== cabin door ==-->
<animation>
		<type>pick</type>
		<object-name>cabin_door</object-name>
		<action>
			<button>0</button>
			<repeatable>false</repeatable>
			<binding>
				<command>nasal</command>
				<script>Y12B.toggle_door0()</script>
			</binding>
		</action>
</animation>
<animation>
		<type>translate</type>
		<object-name>cabin_door</object-name>

		<property>controls/doors/door0/position-norm</property>
		<interpolation>
			<entry>
				<ind>0.0</ind>
				<dep>0.0</dep>
			</entry>
			<entry>
				<ind>1.00</ind>
				<dep>0.85</dep>
			</entry>
		</interpolation>
		<axis>
			<x>1.0</x>
			<y>0.0</y>
			<z>0.0</z>
		</axis>
</animation>

<!--== cockpit to cabin door ==-->
<animation>
		<type>pick</type>
		<object-name>cabin-cockpit-door</object-name>
		<action>
			<button>0</button>
			<repeatable>false</repeatable>
			<binding>
				<command>nasal</command>
				<script>Y12B.toggle_door2()</script>
			</binding>
		</action>
</animation>
<animation>
		<type>translate</type>
		<object-name>cabin-cockpit-door</object-name>
		<property>gear/launchbar/position-norm</property>
		<interpolation>
			<entry>
				<ind>0.0</ind>
				<dep>0.0</dep>
			</entry>
			<entry>
				<ind>1.00</ind>
				<dep>0.60</dep>
			</entry>
		</interpolation>
		<axis>
			<x>0.0</x>
			<y>-1.0</y>
			<z>0.0</z>
		</axis>
</animation>


<!-- jump signal lights -->
<!-- light1: red -->
<animation> 
  <type>material</type> 
  <object-name>signal-light1</object-name>
  <condition>
			 <equals>
				 <property>controls/lighting/signal-light</property>
                 <value>1</value>
           </equals>	
  </condition>
  <emission>
   <red>1.0</red>
   <green>0.0</green>
   <blue>0.0</blue>
  </emission>
</animation>
 

<!-- light2: yellow -->
<animation> 
  <type>material</type> 
  <object-name>signal-light2</object-name>
  <condition>
			 <equals>
				 <property>controls/lighting/signal-light</property>
                 <value>2</value>
           </equals>	
  </condition>
  <emission>
   <red>1.0</red>
   <green>1.0</green>
   <blue>0.0</blue>
   
  </emission>
</animation>


<!-- light3: green -->
<animation> 
  <type>material</type> 
  <object-name>signal-light3</object-name>
  <condition>
			 <equals>
				 <property>controls/lighting/signal-light</property>
                 <value>3</value>
           </equals>	
  </condition>
  <emission>
   <red>0.0</red>
   <green>1.0</green>
   <blue>0.0</blue>
  
  </emission>
</animation>


<!-- altimeter instrument in cockpit panel (disabled)
<model>
        <path>Aircraft/Y12B/Models/Instruments/altimeter.xml</path>
        <name>Altimeter</name>
        <offsets>
            <x-m>-7.71</x-m>
            <y-m>-0.594</y-m>
            <z-m>2.364</z-m>
        </offsets>
</model>
-->




</PropertyList>
